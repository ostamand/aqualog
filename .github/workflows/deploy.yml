name: Deploy to production

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

env:
  GAR_LOCATION: us-east4
  REPOSITORY: aqualog
  SERVICE: server
  PROJECT_ID: ostamand

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: Checkout branch
        uses: actions/checkout@v3

      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v0"

      - name: "Authenticate docker"
        run: |
          gcloud auth configure-docker us-east4-docker.pkg.dev

      - id: secrets
        name: Get Secret Manager secrets
        uses: google-github-actions/get-secretmanager-secrets@v0
        with:
          secrets: |-
            db:projects/585499903514/secrets/aqualog-db-production

      - name: Dump env from secrets
        env:
          DB_SOURCE: "${{ steps.secrets.outputs.db }}"
        run: |
          pip install dump-env
          dump-env --source=app.env > app.env

      - name: Build & push docker image
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{env.SERVICE}}:${{ github.sha }}" .
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{env.SERVICE}}:${{ github.sha }}"

      - name: Apply production DB migration
        env:
          DB_SOURCE: "${{ steps.secrets.outputs.db }}"
        run: |
          curl -L https://github.com/golang-migrate/migrate/releases/download/v4.15.2/migrate.linux-amd64.tar.gz | tar xvz
          sudo mv migrate /bin/migrate
          migrate -path db/migration -database "$DB_SOURCE" -verbose up
